# This GitHub Actions workflow is designed to build and push a Docker image for the frontend 
# application, and then update the Kubernetes manifest files in the ArgoCD repository 
# whenever a 'frontend_push' event is triggered via a repository_dispatch event.

name: Build and Push Frontend Image, Update Kubernetes Manifests

on:
  repository_dispatch:
    types: [frontend_push]  # This workflow triggers when a 'frontend_push' event is received

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # The job will run on the latest version of Ubuntu

    steps:
      - name: Checkout frontend code
        uses: actions/checkout@v2
        with:
          repository: aitdevops/frontend  # Checks out the frontend code from the specified repository
          token: ${{ secrets.GH_TOKEN }}
          path: frontend  # Clones the frontend repository into the 'frontend' directory

      - name: Set up Google Cloud auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}  # Authenticates to Google Cloud using service account credentials

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.PROJECT_ID }}  # Sets up the Google Cloud SDK with the specified project ID
          install_components: kubectl  # Installs the 'kubectl' component for interacting with Kubernetes clusters

      - name: Configure Docker for GCP
        run: gcloud auth configure-docker us-central1-docker.pkg.dev  # Configures Docker to authenticate with Google Container Registry

      - name: Build and push frontend image
        run: |
          IMAGE_TAG=${{ github.event.client_payload.sha }}  # Uses the commit SHA from the triggered event as the image tag
          docker build -t us-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/aitdevops-gke/frontend:$IMAGE_TAG -f frontend/frontend/Dockerfile ./frontend/frontend  # Builds the Docker image for the frontend
          docker push us-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/aitdevops-gke/frontend:$IMAGE_TAG  # Pushes the Docker image to Google Container Registry

      - name: Configure git
        run: |
          git config --global user.email "rajeevkoppisetti21@gmail.com"
          git config --global user.name "aitdevops"  # Configures Git with the user's name and email for committing changes

      - name: Clone argocd repo
        run: |
          git clone https://${{ secrets.GH_TOKEN }}@github.com/aitdevops/argocd.git  # Clones the ArgoCD repository
          cd argocd
          git checkout main  # Checks out the 'main' branch

      - name: Update kubernetes manifest file
        run: |
          cd argocd
          IMAGE_TAG=${{ github.event.client_payload.sha }}  # Uses the commit SHA to update the Kubernetes manifest
          sed -i 's|image:.*|image: "us-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/aitdevops-gke/frontend:'$IMAGE_TAG'"|g' frontend/deployment.yaml  # Updates the Docker image tag in the Kubernetes manifest
          git add frontend/deployment.yaml
          git commit -m "Update frontend image to $IMAGE_TAG"  # Commits the changes to the manifest file

      - name: Push changes
        run: |
          cd argocd
          git push https://${{ secrets.GH_TOKEN }}@github.com/aitdevops/argocd.git main  # Pushes the changes back to the ArgoCD repository
